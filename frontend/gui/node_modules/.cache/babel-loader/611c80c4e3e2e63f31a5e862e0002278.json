{"ast":null,"code":"var _jsxFileName = \"/home/anna/synergy-way-task/frontend/gui/src/components/StudentForm.js\";\nimport React from 'react';\nimport StudentListCompoment from '../components/StudentList';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport Select from 'react-select';\nimport StudentsService from '../services/StudentsService';\nimport GroupsService from '../services/GroupsService';\nconst groupsService = new GroupsService();\nconst studentsService = new StudentsService();\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nclass StudentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectChange = event => this.setState({\n      optionsState: event.target.value\n    });\n\n    this.state = {\n      groups: [],\n      student: {},\n      optionsState: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(props) {\n    // const studID = this.props.studentID\n    var self = this;\n    groupsService.getGroups().then(result => {\n      self.setState({\n        groups: result\n      });\n    });\n\n    if (this.props.studentID) {\n      studentsService.getStudentsByID(this.props.studentID).then(stud => {\n        self.setState({\n          student: stud,\n          optionsState: stud.group\n        });\n      });\n    }\n  }\n\n  handleSubmit(event, requestType, studentID) {\n    const username = event.target.elements.username.value;\n    const group_id = event.target.elements.group.value;\n\n    if (!studentID) {\n      studentsService.createStudent({\n        \"username\": username,\n        \"group\": group_id\n      }).then(result => {\n        alert(\"Customer created!\");\n      }).catch(() => {\n        alert('There was an error! Please re-check your form.');\n      });\n    } else {\n      this.handleUpdate(studentID, username, group_id);\n    }\n  }\n\n  handleUpdate(pk, username, group_id) {\n    console.log(\"UPDATE\");\n    studentsService.updateStudent({\n      \"id\": pk,\n      \"username\": username,\n      \"group\": group_id\n    }).then(result => {\n      alert(\"Customer updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, this.props.requestType, this.props.studentID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Student Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"username\",\n      name: \"username\",\n      value: this.state.student.username,\n      placeholder: \"Your full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Select Group\"), React.createElement(\"select\", {\n      class: \"form-control\",\n      name: \"group\",\n      value: this.state.optionsState,\n      onChange: this.handleSelectChange,\n      id: \"groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.groups.map((group, index) => React.createElement(\"option\", {\n      value: group.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, group.name)))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/anna/synergy-way-task/frontend/gui/src/components/StudentForm.js"],"names":["React","StudentListCompoment","axios","Modal","Select","StudentsService","GroupsService","groupsService","studentsService","customStyles","content","top","left","right","bottom","marginRight","transform","StudentForm","Component","constructor","props","handleSelectChange","event","setState","optionsState","target","value","state","groups","student","handleSubmit","bind","componentDidMount","self","getGroups","then","result","studentID","getStudentsByID","stud","group","requestType","username","elements","group_id","createStudent","alert","catch","handleUpdate","pk","console","log","updateStudent","render","e","map","index","id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StudentListCompoment from '../components/StudentList'\nimport axios from 'axios'\nimport Modal from 'react-modal';\nimport Select from 'react-select';\n\nimport StudentsService from '../services/StudentsService';\nimport GroupsService from '../services/GroupsService'\n\n\nconst  groupsService  =  new  GroupsService();\nconst  studentsService  =  new  StudentsService();\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\n\nclass StudentForm extends React.Component{\nconstructor(props){\nsuper(props);\nthis.state={\ngroups:[],\nstudent:{},\noptionsState:''}\nthis.handleSubmit = this.handleSubmit.bind(this)}\n\ncomponentDidMount(props){\n// const studID = this.props.studentID\n\n\n var  self  =  this;\n groupsService.getGroups().then(result=> {\n        self.setState({ groups:  result})\n    });\n   if(this.props.studentID){\n    studentsService.getStudentsByID(this.props.studentID).then(stud=> {\n        self.setState({ student:  stud, optionsState:stud.group})\n    });\n\n   }\n        };\n\nhandleSubmit(event, requestType, studentID) {\n    const username = event.target.elements.username.value;\n    const group_id = event.target.elements.group.value;\n\n    if (!studentID){\n      studentsService.createStudent(\n        {\n        \"username\":  username,\n        \"group\":  group_id,\n\n        }).then((result)=>{\n                alert(\"Customer created!\");\n        }).catch(()=>{\n                alert('There was an error! Please re-check your form.');\n        });\n   }else{\n   this.handleUpdate(studentID,username,group_id)}\n}\n\n\n\nhandleUpdate(pk,username,group_id){\nconsole.log(\"UPDATE\")\nstudentsService.updateStudent(\n    {\n   \"id\":pk,\n   \"username\":  username,\n        \"group\":  group_id\n    }\n    ).then((result)=>{\n\n        alert(\"Customer updated!\");\n    }).catch(()=>{\n        alert('There was an error! Please re-check your form.');\n    });\n}\nhandleSelectChange= (event) =>\nthis.setState({optionsState:event.target.value})\n\nrender(){\nreturn (\n\n      <div>\n  <form onSubmit={(e)=>this.handleSubmit(e,this.props.requestType,this.props.studentID)}>\n  <div class=\"form-group\">\n    <label for=\"username\">Student Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"username\" name='username' value={this.state.student.username} placeholder=\"Your full Name\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"groups\">Select Group</label>\n    <select class=\"form-control\" name = \"group\"  value={this.state.optionsState} onChange={this.handleSelectChange} id=\"groups\">\n    {this.state.groups.map((group,index) =>\n      <option value={group.id}>{group.name}</option>\n     )}\n    </select>\n  </div>\n    <button>Submit</button>\n\n  </form>\n      </div>\n\n\n\n\n\n)}\n}\nexport default StudentForm;"]},"metadata":{},"sourceType":"module"}