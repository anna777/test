{"ast":null,"code":"var _jsxFileName = \"/home/anna/synergy-way-task/frontend/gui/src/components/StudentForm.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport StudentsService from '../services/StudentsService';\nimport GroupsService from '../services/GroupsService';\nconst groupsService = new GroupsService();\nconst studentsService = new StudentsService();\n\nclass StudentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectChange = event => this.setState({\n      optionsState: event.target.value\n    });\n\n    this.handleUserChange = event => this.setState({\n      username: event.target.value\n    });\n\n    this.state = {\n      groups: [],\n      student: {},\n      optionsState: '',\n      username: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(props) {\n    groupsService.getGroups().then(result => {\n      this.setState({\n        groups: result\n      });\n    });\n\n    if (this.props.studentID) {\n      studentsService.getStudentsByID(this.props.studentID).then(stud => {\n        this.setState({\n          student: stud,\n          optionsState: stud.group,\n          username: stud.username\n        });\n      });\n    }\n  }\n\n  handleSubmit(event, requestType, studentID) {\n    const username = event.target.elements.username.value;\n    const group_id = event.target.elements.group.value;\n\n    if (!studentID) {\n      studentsService.createStudent({\n        \"username\": username,\n        \"group\": group_id\n      }).then(result => {\n        alert(\"Student created!\");\n      }).catch(() => {\n        alert('There was an error! Please re-check your form.');\n      });\n    } else {\n      this.handleUpdate(studentID, username, group_id);\n    }\n  }\n\n  handleUpdate(pk, username, group_id) {\n    studentsService.updateStudent({\n      \"id\": pk,\n      \"username\": username,\n      \"group\": group_id\n    }).then(result => {\n      alert(\"Student updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, this.props.requestType, this.props.studentID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Student Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleUserChange,\n      placeholder: \"Your full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Select Group\"), React.createElement(\"select\", {\n      class: \"form-control\",\n      name: \"group\",\n      onChange: this.handleSelectChange,\n      value: this.state.optionsState,\n      id: \"groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.groups.map((group, index) => React.createElement(\"option\", {\n      value: group.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, group.name)))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/anna/synergy-way-task/frontend/gui/src/components/StudentForm.js"],"names":["React","Select","StudentsService","GroupsService","groupsService","studentsService","StudentForm","Component","constructor","props","handleSelectChange","event","setState","optionsState","target","value","handleUserChange","username","state","groups","student","handleSubmit","bind","componentDidMount","getGroups","then","result","studentID","getStudentsByID","stud","group","requestType","elements","group_id","createStudent","alert","catch","handleUpdate","pk","updateStudent","render","e","map","index","id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nimport StudentsService from '../services/StudentsService';\nimport GroupsService from '../services/GroupsService';\n\n\nconst  groupsService  =  new  GroupsService();\nconst  studentsService  =  new  StudentsService();\n\n\nclass StudentForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            groups:[],\n            student:{},\n            optionsState:'',\n            username:''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount(props){\n         groupsService.getGroups().then(result=> {\n            this.setState({ groups:  result})\n               });\n         if(this.props.studentID){\n                studentsService.getStudentsByID(this.props.studentID).then(stud=> {\n                        this.setState({ student:stud, optionsState:stud.group, username:stud.username})\n                });\n         }\n          };\n\n    handleSubmit(event, requestType, studentID) {\n        const username = event.target.elements.username.value;\n        const group_id = event.target.elements.group.value;\n\n        if (!studentID){\n            studentsService.createStudent(\n              {\n              \"username\":  username,\n              \"group\":  group_id,\n\n               }).then((result)=>{\n                    alert(\"Student created!\");\n                }).catch(()=>{\n                    alert('There was an error! Please re-check your form.');\n             });\n        }else{\n            this.handleUpdate(studentID,username,group_id)\n        }\n    }\n\n\n    handleUpdate(pk,username,group_id){\n        studentsService.updateStudent(\n            {\"id\":pk,\n             \"username\":  username,\n             \"group\":  group_id\n            }\n        ).then((result)=>{\n            alert(\"Student updated!\");\n        }).catch(()=>{\n            alert('There was an error! Please re-check your form.');\n        });\n    }\n    handleSelectChange= (event) =>\n        this.setState({optionsState:event.target.value})\n\n    handleUserChange= (event) =>\n        this.setState({username:event.target.value})\n\n    render(){\n        return (\n\n         <div>\n          <form onSubmit={(e)=>this.handleSubmit(e,this.props.requestType,this.props.studentID)}>\n          <div class=\"form-group\">\n            <label for=\"username\">Student Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" name='username' value={this.state.username} onChange={this.handleUserChange} placeholder=\"Your full Name\"/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"groups\">Select Group</label>\n            <select class=\"form-control\"   name='group' onChange={this.handleSelectChange} value={this.state.optionsState} id=\"groups\">\n            {this.state.groups.map((group,index) =>\n                <option value={group.id}>{group.name}</option>\n             )}\n            </select>\n          </div>\n          <button>Submit</button>\n          \n\n         </form>\n        </div>\n    )}\n}\nexport default StudentForm;"]},"metadata":{},"sourceType":"module"}