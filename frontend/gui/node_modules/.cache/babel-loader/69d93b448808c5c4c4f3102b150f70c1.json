{"ast":null,"code":"var _jsxFileName = \"/home/anna/synergy-way-task/frontend/gui/src/components/GroupForm.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport GroupsService from '../services/GroupsService';\nconst groupsService = new GroupsService();\n\nclass StudentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGroupDescChange = event => this.setState({\n      groupDesc: event.target.value\n    });\n\n    this.handleGroupNameChange = event => this.setState({\n      groupName: event.target.value\n    });\n\n    this.state = {\n      groups: [],\n      groupDesc: '',\n      groupName: '',\n      groupObj: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(props) {\n    groupsService.getGroups().then(result => {\n      this.setState({\n        groups: result\n      });\n    });\n\n    if (this.props.groupID) {\n      groupsService.getGroupByID(this.props.groupID).then(group => {\n        this.setState({\n          groupObj: group,\n          groupDesc: group.description,\n          groupName: group.name\n        });\n      });\n    }\n  }\n\n  handleSubmit(event, requestType, groupID) {\n    const groupName = event.target.elements.groupName.value;\n    const group_desc = event.target.elements.groupDesc.value;\n\n    if (!groupID) {\n      groupsService.createGroup({\n        \"name\": groupName,\n        \"description\": group_desc\n      }).then(result => {\n        alert(\"Group created!\");\n      }).catch(() => {\n        alert('There was an error! Please re-check your form.');\n      });\n    } else {\n      this.handleUpdate(groupID, groupName, group_desc);\n    }\n  }\n\n  handleUpdate(pk, groupName, desc) {\n    groupsService.updateGroup({\n      \"id\": pk,\n      \"name\": groupName,\n      \"description\": desc\n    }).then(result => {\n      alert(\"Group updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, this.props.requestType, this.props.groupID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Student Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"groupName\",\n      value: this.state.groupName,\n      onChange: this.handleGroupNameChange,\n      placeholder: \"Group Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group purple-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"groupDesc1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Group description\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"groupDesc1\",\n      value: this.state.groupDesc,\n      onChange: this.handleGroupDescChange,\n      name: \"groupDesc\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/anna/synergy-way-task/frontend/gui/src/components/GroupForm.js"],"names":["React","Select","GroupsService","groupsService","StudentForm","Component","constructor","props","handleGroupDescChange","event","setState","groupDesc","target","value","handleGroupNameChange","groupName","state","groups","groupObj","handleSubmit","bind","componentDidMount","getGroups","then","result","groupID","getGroupByID","group","description","name","requestType","elements","group_desc","createGroup","alert","catch","handleUpdate","pk","desc","updateGroup","render","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nimport GroupsService from '../services/GroupsService';\n\n\nconst  groupsService  =  new  GroupsService();\n\nclass StudentForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            groups:[],\n            groupDesc:'',\n            groupName:'',\n            groupObj:{}}\n         this.handleSubmit = this.handleSubmit.bind(this)\n         }\n\n    componentDidMount(props){\n       groupsService.getGroups().then(result=> {\n            this.setState({ groups:  result})\n         });\n       if(this.props.groupID){\n           groupsService.getGroupByID(this.props.groupID).then(group=> {\n                   this.setState({ groupObj:group, groupDesc:group.description, groupName:group.name})\n                   });\n       }\n    };\n\n    handleSubmit(event, requestType, groupID) {\n        const groupName = event.target.elements.groupName.value;\n        const group_desc = event.target.elements.groupDesc.value;\n\n        if (!groupID){\n          groupsService.createGroup(\n            {\n            \"name\":  groupName,\n            \"description\":  group_desc,\n\n            }).then((result)=>{\n                    alert(\"Group created!\");\n            }).catch(()=>{\n                    alert('There was an error! Please re-check your form.');\n            });\n       }else{\n       this.handleUpdate(groupID,groupName,group_desc)}\n    }\n\n\n    handleUpdate(pk,groupName,desc){\n    groupsService.updateGroup(\n        {\n       \"id\":pk,\n        \"name\":  groupName,\n        \"description\":  desc,\n        }\n        ).then((result)=>{\n          alert(\"Group updated!\");\n        }).catch(()=>{\n           alert('There was an error! Please re-check your form.');\n        });\n    }\n    handleGroupDescChange= (event) =>\n    this.setState({groupDesc:event.target.value})\n\n    handleGroupNameChange= (event) =>\n    this.setState({groupName:event.target.value})\n\n    render(){\n        return (\n          <div>\n          <form onSubmit={(e)=>this.handleSubmit(e,this.props.requestType,this.props.groupID)}>\n          <div className=\"form-group\">\n            <label for=\"username\">Student Name</label>\n            <input type=\"text\" className=\"form-control\" name='groupName' value={this.state.groupName}\n            onChange={this.handleGroupNameChange} placeholder=\"Group Name\"/>\n          </div>\n          <div className=\"form-group purple-border\">\n             <label for=\"groupDesc1\">Group description</label>\n             <textarea className=\"form-control\" id=\"groupDesc1\" value={this.state.groupDesc}\n             onChange={this.handleGroupDescChange} name=\"groupDesc\" rows=\"3\"></textarea>\n          </div>\n\n          <button>Submit</button>\n          </form>\n          </div>\n        )}\n    }\nexport default StudentForm;"]},"metadata":{},"sourceType":"module"}