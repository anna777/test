{"ast":null,"code":"var _jsxFileName = \"/home/anna/synergy-way-task/frontend/gui/src/components/GroupForm.js\";\nimport React from 'react';\nimport StudentListCompoment from '../components/StudentList';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport Select from 'react-select';\nimport GroupsService from '../services/GroupsService';\nconst groupsService = new GroupsService();\n\nclass StudentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGroupDescChange = event => this.setState({\n      groupDesc: event.target.value\n    });\n\n    this.handleGroupNameChange = event => this.setState({\n      groupName: event.target.value\n    });\n\n    this.state = {\n      groups: [],\n      groupDesc: '',\n      groupName: '',\n      groupObj: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(props) {\n    var self = this;\n    groupsService.getGroups().then(result => {\n      self.setState({\n        groups: result\n      });\n    });\n\n    if (this.props.groupID) {\n      groupsService.getGroupByID(this.props.groupID).then(group => {\n        this.setState({\n          groupObj: group,\n          groupDesc: group.description,\n          groupName: group.name\n        });\n      });\n    }\n  }\n\n  handleSubmit(event, requestType, groupID) {\n    const groupName = event.target.elements.groupName.value;\n    const group_desc = event.target.elements.groupDesc.value;\n\n    if (!groupID) {\n      groupsService.createGroup({\n        \"name\": groupName,\n        \"description\": group_desc\n      }).then(result => {\n        alert(\"Group created!\");\n      }).catch(() => {\n        alert('There was an error! Please re-check your form.');\n      });\n    } else {\n      this.handleUpdate(groupID, groupName, group_desc);\n    }\n  }\n\n  handleUpdate(pk, groupName, desc) {\n    groupsService.updateGroup({\n      \"id\": pk,\n      \"name\": groupName,\n      \"description\": desc\n    }).then(result => {\n      alert(\"Group updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, this.props.requestType, this.props.groupID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Student Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"groupName\",\n      value: this.state.groupName,\n      onChange: this.handleGroupNameChange,\n      placeholder: \"Group Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group purple-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"groupDesc1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Group description\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"groupDesc1\",\n      value: this.state.groupDesc,\n      onChange: this.handleGroupDescChange,\n      name: \"groupDesc\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/anna/synergy-way-task/frontend/gui/src/components/GroupForm.js"],"names":["React","StudentListCompoment","axios","Modal","Select","GroupsService","groupsService","StudentForm","Component","constructor","props","handleGroupDescChange","event","setState","groupDesc","target","value","handleGroupNameChange","groupName","state","groups","groupObj","handleSubmit","bind","componentDidMount","self","getGroups","then","result","groupID","getGroupByID","group","description","name","requestType","elements","group_desc","createGroup","alert","catch","handleUpdate","pk","desc","updateGroup","render","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StudentListCompoment from '../components/StudentList'\nimport axios from 'axios'\nimport Modal from 'react-modal';\nimport Select from 'react-select';\n\nimport GroupsService from '../services/GroupsService'\n\n\nconst  groupsService  =  new  GroupsService();\n\nclass StudentForm extends React.Component{\nconstructor(props){\nsuper(props);\nthis.state={\ngroups:[],\ngroupDesc:'',\ngroupName:'',\ngroupObj:{}}\nthis.handleSubmit = this.handleSubmit.bind(this)}\n\ncomponentDidMount(props){\n var  self  =  this;\n groupsService.getGroups().then(result=> {\n        self.setState({ groups:  result})\n    });\n   if(this.props.groupID){\n\n    groupsService.getGroupByID(this.props.groupID).then(group=> {\n        this.setState({ groupObj:group, groupDesc:group.description, groupName:group.name})\n    });\n\n   }\n        };\n\n\nhandleSubmit(event, requestType, groupID) {\n    const groupName = event.target.elements.groupName.value;\n    const group_desc = event.target.elements.groupDesc.value;\n\n    if (!groupID){\n      groupsService.createGroup(\n        {\n        \"name\":  groupName,\n        \"description\":  group_desc,\n\n        }).then((result)=>{\n                alert(\"Group created!\");\n        }).catch(()=>{\n                alert('There was an error! Please re-check your form.');\n        });\n   }else{\n   this.handleUpdate(groupID,groupName,group_desc)}\n}\n\n\n\nhandleUpdate(pk,groupName,desc){\ngroupsService.updateGroup(\n    {\n   \"id\":pk,\n    \"name\":  groupName,\n     \"description\":  desc,\n    }\n    ).then((result)=>{\n\n        alert(\"Group updated!\");\n    }).catch(()=>{\n        alert('There was an error! Please re-check your form.');\n    });\n}\nhandleGroupDescChange= (event) =>\nthis.setState({groupDesc:event.target.value})\n\n\nhandleGroupNameChange= (event) =>\nthis.setState({groupName:event.target.value})\n\nrender(){\nreturn (\n\n      <div>\n  <form onSubmit={(e)=>this.handleSubmit(e,this.props.requestType,this.props.groupID)}>\n  <div className=\"form-group\">\n    <label for=\"username\">Student Name</label>\n    <input type=\"text\" className=\"form-control\" name='groupName' value={this.state.groupName} onChange={this.handleGroupNameChange} placeholder=\"Group Name\"/>\n  </div>\n    <div className=\"form-group purple-border\">\n  <label for=\"groupDesc1\">Group description</label>\n  <textarea className=\"form-control\" id=\"groupDesc1\" value={this.state.groupDesc} onChange={this.handleGroupDescChange} name=\"groupDesc\" rows=\"3\"></textarea>\n   </div>\n\n\n    <button>Submit</button>\n\n  </form>\n      </div>\n\n\n\n\n\n)}\n}\nexport default StudentForm;"]},"metadata":{},"sourceType":"module"}